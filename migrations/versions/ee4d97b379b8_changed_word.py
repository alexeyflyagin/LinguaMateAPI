"""Changed: word

Revision ID: ee4d97b379b8
Revises: ae8955ab5af9
Create Date: 2025-01-29 19:49:09.343825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee4d97b379b8'
down_revision: Union[str, None] = 'ae8955ab5af9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('account_and_word')
    op.alter_column('phrase', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('word', sa.Column('account_id', sa.BIGINT(), nullable=False))
    op.add_column('word', sa.Column('translations', sa.JSON(), nullable=False))
    op.alter_column('word', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key(None, 'word', 'account', ['account_id'], ['id'], ondelete='CASCADE')
    op.drop_column('word', 'translates')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('word', sa.Column('translates', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint('word_account_id_fkey', 'word', type_='foreignkey')
    op.alter_column('word', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('word', 'translations')
    op.drop_column('word', 'account_id')
    op.alter_column('phrase', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('account_and_word',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('date_create', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('account_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('word_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], name='account_and_word_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['word_id'], ['word.id'], name='account_and_word_word_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='account_and_word_pkey')
    )
    # ### end Alembic commands ###
